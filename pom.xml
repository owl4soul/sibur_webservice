<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>ru.spi2</groupId>
	<artifactId>sibur_webservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>sibur_webservice</name>
	<description>Web service</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Добавленные -->
			<!-- Jaxb-плагин для генерации java-классов из xsd-схемы в процессе компиляции -->
			<!-- Для генерации классов из схем выполнить команду: mvn clean compile -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>1.6</version>
				<!-- Можно одновременно генерить с помощью xjc классы из xsd и из wsdl при помощи разных execution -->
				<executions>
					<!--<execution>-->
					<!--<id>generate-sri-facturas</id>-->
					<!--<phase>generate-sources</phase>-->
					<!--<goals>-->
					<!--<goal>xjc</goal>-->
					<!--</goals>-->
					<!--<configuration>-->
					<!--<outputDirectory>target/generated-sources/test_countries</outputDirectory>-->
					<!--&lt;!&ndash;<packageName>${project.basedir}.countries</packageName>&ndash;&gt;-->
					<!--<schemaDirectory>src/main/resources/schema/xsd</schemaDirectory>-->
					<!--<schemaFiles>countries.xsd</schemaFiles>-->
					<!--</configuration>-->
					<!--</execution>-->
					<execution>
						<id>generate-sibur</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>xjc</goal>
						</goals>
						<configuration>
							<!-- Локация, откуда будут читаться 'сырые' файлы xsd-схем, из которых будут генериться классы -->
							<schemaDirectory>src/main/resources/schema/wsdl</schemaDirectory>
							<!-- Локация, куда будут сгенерированы готовые java-классы из xsd-схем -->
							<outputDirectory>${project.basedir}/src/main/java</outputDirectory>

							<!--<packageName>${project.basedir}.sibur</packageName>-->

							<!-- Нижеследущие два флага отвечают за генерацию из wsdl, вместо генерации из xsd -->
							<wsdl>true</wsdl>
							<xmlschema>false</xmlschema>

							<!-- Указываем wsdl-файлы для генерации -->
							<schemaFiles>SparkMarketingService.wsdl</schemaFiles>

							<!-- Чтоб не затиралась директория, в которую складываем файлы -->
							<clearOutputDir>false</clearOutputDir>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Шаблонные -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
