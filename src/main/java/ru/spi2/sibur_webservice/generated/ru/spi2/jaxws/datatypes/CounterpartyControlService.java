
package ru.spi2.sibur_webservice.generated.ru.spi2.jaxws.datatypes;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CounterpartyControlService", targetNamespace = "http://spi2.ru/jaxws/datatypes", wsdlLocation = "/schema/wsdl/CounterpartyControlService.wsdl")
public class CounterpartyControlService
    extends Service
{

    private final static URL COUNTERPARTYCONTROLSERVICE_WSDL_LOCATION;
    private final static WebServiceException COUNTERPARTYCONTROLSERVICE_EXCEPTION;
    private final static QName COUNTERPARTYCONTROLSERVICE_QNAME = new QName("http://spi2.ru/jaxws/datatypes", "CounterpartyControlService");

    static {
        COUNTERPARTYCONTROLSERVICE_WSDL_LOCATION = ru.spi2.sibur_webservice.generated.ru.spi2.jaxws.datatypes.CounterpartyControlService.class.getResource("/schema/wsdl/CounterpartyControlService.wsdl");
        WebServiceException e = null;
        if (COUNTERPARTYCONTROLSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '/schema/wsdl/CounterpartyControlService.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        COUNTERPARTYCONTROLSERVICE_EXCEPTION = e;
    }

    public CounterpartyControlService() {
        super(__getWsdlLocation(), COUNTERPARTYCONTROLSERVICE_QNAME);
    }

    public CounterpartyControlService(WebServiceFeature... features) {
        super(__getWsdlLocation(), COUNTERPARTYCONTROLSERVICE_QNAME, features);
    }

    public CounterpartyControlService(URL wsdlLocation) {
        super(wsdlLocation, COUNTERPARTYCONTROLSERVICE_QNAME);
    }

    public CounterpartyControlService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, COUNTERPARTYCONTROLSERVICE_QNAME, features);
    }

    public CounterpartyControlService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CounterpartyControlService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CounterPartyControlServiceImpl
     */
    @WebEndpoint(name = "CounterpartyControlServicePort")
    public CounterPartyControlServiceImpl getCounterpartyControlServicePort() {
        return super.getPort(new QName("http://spi2.ru/jaxws/datatypes", "CounterpartyControlServicePort"), CounterPartyControlServiceImpl.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CounterPartyControlServiceImpl
     */
    @WebEndpoint(name = "CounterpartyControlServicePort")
    public CounterPartyControlServiceImpl getCounterpartyControlServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://spi2.ru/jaxws/datatypes", "CounterpartyControlServicePort"), CounterPartyControlServiceImpl.class, features);
    }

    private static URL __getWsdlLocation() {
        if (COUNTERPARTYCONTROLSERVICE_EXCEPTION!= null) {
            throw COUNTERPARTYCONTROLSERVICE_EXCEPTION;
        }
        return COUNTERPARTYCONTROLSERVICE_WSDL_LOCATION;
    }

}
