
package ru.spi2.sibur_webservice.generated.ru.spi2.jaxws.datatypes;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CounterPartyControlServiceImpl", targetNamespace = "http://spi2.ru/jaxws/datatypes")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CounterPartyControlServiceImpl {


    /**
     * 
     * @param registrreqGuid
     * @param header
     * @param counterparty
     * @return
     *     returns SyncResponse
     */
    @WebMethod(operationName = "CheckAndSaveRegistrCounterpartySRM_Async")
    @WebResult(name = "ResponseSync", targetNamespace = "http://spi2.ru/jaxws/datatypes")
    @RequestWrapper(localName = "CheckAndSaveRegistrCounterpartySRM_Async", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "CheckAndSaveRegistrCounterpartySRMAsync")
    @ResponseWrapper(localName = "CheckAndSaveRegistrCounterpartySRM_AsyncResponse", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "CheckAndSaveRegistrCounterpartySRMAsyncResponse")
    @Action(input = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/CheckAndSaveRegistrCounterpartySRM_AsyncRequest", output = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/CheckAndSaveRegistrCounterpartySRM_AsyncResponse")
    public SyncResponse checkAndSaveRegistrCounterpartySRMAsync(
        @WebParam(name = "header", targetNamespace = "")
        Header header,
        @WebParam(name = "registrreq_guid", targetNamespace = "")
        String registrreqGuid,
        @WebParam(name = "counterparty", targetNamespace = "")
        Counterparty counterparty);

    /**
     * 
     * @param concurrentProcedure
     * @param header
     * @return
     *     returns SyncResponse
     */
    @WebMethod(operationName = "ConcurrentProcedureConclusionRequestAsync")
    @WebResult(name = "ResponseSync", targetNamespace = "http://spi2.ru/jaxws/datatypes")
    @RequestWrapper(localName = "ConcurrentProcedureConclusionRequestAsync", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "ConcurrentProcedureConclusionRequestAsync")
    @ResponseWrapper(localName = "ConcurrentProcedureConclusionRequestAsyncResponse", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "ConcurrentProcedureConclusionRequestAsyncResponse")
    @Action(input = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/ConcurrentProcedureConclusionRequestAsyncRequest", output = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/ConcurrentProcedureConclusionRequestAsyncResponse")
    public SyncResponse concurrentProcedureConclusionRequestAsync(
        @WebParam(name = "header", targetNamespace = "")
        Header header,
        @WebParam(name = "concurrentProcedure", targetNamespace = "")
        ConcurrentProcedure concurrentProcedure);

    /**
     * 
     * @param contractId
     * @param header
     * @param approvalStage
     * @return
     *     returns SyncResponse
     */
    @WebMethod(operationName = "PutContractStatus")
    @WebResult(name = "ResponseSync", targetNamespace = "http://spi2.ru/jaxws/datatypes")
    @RequestWrapper(localName = "PutContractStatus", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "PutContractStatus")
    @ResponseWrapper(localName = "PutContractStatusResponse", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "PutContractStatusResponse")
    @Action(input = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/PutContractStatusRequest", output = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/PutContractStatusResponse")
    public SyncResponse putContractStatus(
        @WebParam(name = "header", targetNamespace = "")
        Header header,
        @WebParam(name = "contractId", targetNamespace = "")
        String contractId,
        @WebParam(name = "approvalStage", targetNamespace = "")
        String approvalStage);

    /**
     * 
     * @param header
     * @param contracts
     * @return
     *     returns SyncResponse
     */
    @WebMethod(operationName = "PutHistoricalContracts")
    @WebResult(name = "ResponseSync", targetNamespace = "http://spi2.ru/jaxws/datatypes")
    @RequestWrapper(localName = "PutHistoricalContracts", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "PutHistoricalContracts")
    @ResponseWrapper(localName = "PutHistoricalContractsResponse", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "PutHistoricalContractsResponse")
    @Action(input = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/PutHistoricalContractsRequest", output = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/PutHistoricalContractsResponse")
    public SyncResponse putHistoricalContracts(
        @WebParam(name = "header", targetNamespace = "")
        Header header,
        @WebParam(name = "contracts", targetNamespace = "")
        List<Contract> contracts);

    /**
     * 
     * @param cisTask
     * @param header
     * @return
     *     returns SyncResponse
     */
    @WebMethod(operationName = "ContractConclusionRequestAsync")
    @WebResult(name = "ResponseSync", targetNamespace = "http://spi2.ru/jaxws/datatypes")
    @RequestWrapper(localName = "ContractConclusionRequestAsync", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "ContractConclusionRequestAsync")
    @ResponseWrapper(localName = "ContractConclusionRequestAsyncResponse", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "ContractConclusionRequestAsyncResponse")
    @Action(input = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/ContractConclusionRequestAsyncRequest", output = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/ContractConclusionRequestAsyncResponse")
    public SyncResponse contractConclusionRequestAsync(
        @WebParam(name = "header", targetNamespace = "")
        Header header,
        @WebParam(name = "cisTask", targetNamespace = "")
        CISTask cisTask);

    /**
     * 
     * @param counterpartySapIdentities
     * @param header
     * @param counterparty
     * @param registrationRegrequestId
     * @return
     *     returns SyncResponse
     */
    @WebMethod(operationName = "PutCounterpartyInfo")
    @WebResult(name = "ResponseSync", targetNamespace = "http://spi2.ru/jaxws/datatypes")
    @RequestWrapper(localName = "PutCounterpartyInfo", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "PutCounterpartyInfo")
    @ResponseWrapper(localName = "PutCounterpartyInfoResponse", targetNamespace = "http://spi2.ru/jaxws/datatypes", className = "PutCounterpartyInfoResponse")
    @Action(input = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/PutCounterpartyInfoRequest", output = "http://spi2.ru/jaxws/datatypes/CounterPartyControlServiceImpl/PutCounterpartyInfoResponse")
    public SyncResponse putCounterpartyInfo(
        @WebParam(name = "header", targetNamespace = "")
        Header header,
        @WebParam(name = "registrationRegrequestId", targetNamespace = "")
        String registrationRegrequestId,
        @WebParam(name = "counterparty", targetNamespace = "")
        Counterparty counterparty,
        @WebParam(name = "counterpartySapIdentities", targetNamespace = "")
        CounterpartySapIdentities counterpartySapIdentities);

}
